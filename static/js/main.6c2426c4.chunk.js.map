{"version":3,"sources":["components/SearchBar.js","components/VideoDetail.js","components/VideoItem.js","components/VideoList.js","App.js","index.js"],"names":["SearchBar","state","searchTerm","handleChange","event","setState","target","value","onKeyPress","key","handleSubmit","this","props","Paper","elevation","style","padding","backgroundColor","TextField","fullWidth","label","onChange","React","Component","VideoDetail","video","videoSrc","id","videoId","corrTime","snippet","publishTime","slice","Fragment","height","width","frameBorder","title","src","Typography","variant","color","channelTitle","description","VideoItem","onVideoSelect","Grid","item","xs","Card","cursor","onClick","CardHeader","titleTypographyProps","fontFamily","subheader","CardMedia","component","thumbnails","medium","url","CardContent","VideoList","videos","listOfVideos","map","container","spacing","KEY","App","selectedVideo","a","axios","get","params","part","maxResult","q","response","data","items","justifyContent","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6c2426c4.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Paper, TextField } from \"@material-ui/core\";\r\n\r\n\r\nclass SearchBar extends React.Component {\r\n    state = {\r\n        searchTerm: ''\r\n    };\r\n  \r\n  handleChange = (event) => this.setState({searchTerm: event.target.value});\r\n\r\n  handleSubmit(searchTerm) {\r\n    this.props.handleSubmit(searchTerm);\r\n  };\r\n\r\n  onKeyPress = (event) => {\r\n      if (event.key === \"Enter\") {\r\nthis.handleSubmit(this.state.searchTerm)\r\n    }\r\n};\r\n\r\n  render()  {\r\n  return (\r\n    <Paper elevation={6} style={{ padding: \"10px\", backgroundColor: \"rgb(80,80,80)\" }}>\r\n      <TextField\r\n        fullWidth\r\n        label=\"Search...\"\r\n        value={this.state.searchTerm}\r\n        onChange={this.handleChange}\r\n        onKeyPress={this.onKeyPress}\r\n        handleSubmit={this.handleSubmit}\r\n      />\r\n    </Paper>\r\n  );\r\n}\r\n};\r\n\r\nexport default SearchBar;","import React from \"react\";\r\nimport { Paper, Typography } from \"@material-ui/core\";\r\n\r\nconst VideoDetail = ({ video }) => {\r\n  if (!video) return <div>Loading...</div>;\r\n  const videoSrc = `https://www.youtube.com/embed/${video.id.videoId}`; // fetch using earlier fetched video ids\r\n  const pTime = video.snippet.publishTime;\r\n  const corrTime = \"Publish Time: \" + pTime.slice(0, 10)\r\n\r\n  return (\r\n    <React.Fragment>\r\n       <Paper elevation={6} style={{ height: \"22%\", width: \"85%\"}}>\r\n          <iframe\r\n          frameBorder=\"0\"\r\n          height=\"100%\"\r\n          width=\"100%\"\r\n          title=\"Video Player\"\r\n          src={videoSrc}\r\n          />\r\n        </Paper>\r\n        <Paper elevation={6} style={{ padding: \"15px\", width: \"81.6%\", height: \"15%\",backgroundColor:'rgb(80,80,80)'}}>\r\n         <Typography variant=\"h4\" style={{color:'rgb(252,252,252)'}}>\r\n          {video.snippet.title} - {video.snippet.channelTitle}\r\n         </Typography>\r\n         <Typography variant=\"subtitle1\" style={{color:'rgb(2,2,2)'}}>\r\n          {video.snippet.channelTitle}\r\n         </Typography>\r\n         <Typography variant=\"subtitle2\" style={{color:'rgb(2,2,2)'}}>{video.snippet.description}</Typography>\r\n         <Typography variant=\"subtitle1\" style={{color:'rgb(252,252,252)'}}>\r\n          {corrTime}\r\n         </Typography>\r\n        </Paper>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default VideoDetail;","import React from \"react\";\r\nimport { Grid, Typography, CardHeader,Card,CardMedia,CardContent } from \"@material-ui/core\";\r\n\r\nconst VideoItem = ({ video, onVideoSelect }) => {\r\nconst pTime = video.snippet.publishTime;\r\nconst corrTime = \"Publish Time: \" + pTime.slice(0, 10)\r\nreturn (\r\n <Grid item xs={12}>\r\n    <Card variant=\"outlined\" style={{cursor:'pointer' ,backgroundColor: \"rgb(80,80,80)\"}} onClick={() => onVideoSelect(video)}>\r\n      <CardHeader title={video.snippet.title} titleTypographyProps={{variant:'h6' }} style={{ color:'rgb(252, 252, 252)', fontFamily:'calibri'}}\r\n      subheader={corrTime}\r\n    />\r\n  <CardMedia component='img' src={video.snippet.thumbnails.medium.url} style = {{ height: 150}}/>\r\n      <CardContent>\r\n        <Typography style={{ color:'rgb(2,2,2)', fontFamily:'calibri'}}>\r\n         <b>{video.snippet.description}</b>\r\n        </Typography>\r\n      </CardContent>\r\n    </Card>\r\n </Grid>\r\n  );\r\n}\r\n\r\nexport default VideoItem;\r\n\r\n","import React from \"react\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport VideoItem from \"./VideoItem\";\r\n\r\n\r\nconst VideoList = ({ videos, onVideoSelect }) => {\r\n  const listOfVideos = videos.map((video,id) =>\r\n  <VideoItem\r\n      onVideoSelect={onVideoSelect}\r\n      key={id}\r\n      video={video}\r\n  />\r\n  );\r\n\r\n  return (\r\n    <Grid container spacing={3}>\r\n      {listOfVideos}\r\n    </Grid>\r\n  );\r\n}\r\n\r\nexport default VideoList;","import React from \"react\";\nimport { Grid } from \"@material-ui/core\";\nimport axios from 'axios';\nimport './index.css';\n\nimport { SearchBar, VideoList, VideoDetail } from \"./components\";\n\nconst KEY = 'AIzaSyBIRMchRfnsrA8Pt1dyRyuI5sPH61IjcZ0' // Api key for authorazation\n\n\nclass App extends React.Component {\nstate = {\nvideos: [],\nselectedVideo: null\n};\n  \ncomponentDidMount() {\nthis.handleSubmit('Kitesurfing')\n};\n\nonVideoSelect = (video) => {\n  this.setState({selectedVideo: video})\n  \n}\n\n  handleSubmit = async (searchTerm) => { // fetching data with axios\n    const response = await axios.get(\"https://www.googleapis.com/youtube/v3/search\", {\n    params: {\n      part: \"snippet\",\n      maxResult: 5,\n      key: KEY,\n      q: searchTerm,\n    },\n  });\n\n  this.setState({videos: response.data.items, selectedVideo: response.data.items[0]})\n};\n\nrender(){\n  return (\n    <Grid style={{ justifyContent: \"center\" }} container spacing={10}>\n      <Grid item xs={11}>\n        <Grid container spacing={2}>\n          <Grid item xs={12} >\n            <SearchBar handleSubmit={this.handleSubmit} />\n          </Grid>\n          <Grid item xs={8} spacing={2}>\n            <VideoDetail video={this.state.selectedVideo} />\n          </Grid>\n          <Grid item xs={4} spacing={2}>\n            <VideoList videos={this.state.videos} onVideoSelect={this.onVideoSelect} />\n          </Grid>\n        </Grid>\n      </Grid>\n    </Grid>\n  );\n  }\n  }\n\n\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}